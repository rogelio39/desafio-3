paths:
  /api/users/:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    post:
      summary: Crear un usuario
      tags:
        - Users
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '201':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor

  /api/users/{id}:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: ID del usuario a buscar
      responses:
        '200':
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                items: 
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    put:
      summary: Actualizar usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Id del usuario a actualizar
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        '201':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $type: String
          description: Usuario actualizado correctamente  
      responses:
        '201':
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties: 
        _id:
          type: objectId
          description: Id autogenerado por mongoDb
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Password del usuario
      example:
        _id: objectId('32123123')
        first_name: Ana
        last_name: Alvarez
        email: ana@gmail.com
        password: asdhsajdhasjk21
  





      